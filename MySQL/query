### テーブル作成


create table テーブル名 ( カラム名 データ型 null情報など, ......);


### データの追加


Insert into 家計簿 (カラム名) VALUES(入れるデータ);


### データ型の変更


ALTER TABLE テーブル名 MODIFY カラム名 データ型 NOT NULL;


select,update,deleteは「ある条件を満たす行を探す→その行に対して何かしらの処理をする」の順番で行う

### 検索

SELECTの後ろに検索したい列の名前を書く


SELECT カラム FROM テーブル;


### 更新（FROMを書かない！）


UPDATE テーブル名 SET カラム名 = 値 where 更新したいレコードを検索;



## NULL判定


SELECT *
FROM テーブル名
WHERE カラム IS NULL;



##LIKE演算子


SELSECT * FROM テーブル名
WHERE カラム LIKE "%探したい文字%";


## IN / NOT IN演算子


SELECT *
FROM expenses
WEHRE category IN ("食費", "交際費");



## ORDER BY

SELECT *
FROM expenses
ORDER BY deposit desc, withdraw desc;



## LIMIT - 先頭から数行だけ取得する

検索結果の全行ではなく、先頭の１部だけを獲れる。

SELECT カラム
FROM テーブル
LIMIT 取得行数 
(OFFSET 先頭から除外する行数)


## select内 計算式


mysql> select withdraw, withdraw + 100, "SQL" from expenses;
+----------+----------------+-----+
| withdraw | withdraw + 100 | SQL |
+----------+----------------+-----+
|      380 |            480 | SQL |
|        0 |            100 | SQL |
|     2800 |           2900 | SQL |
|     5000 |           5100 | SQL |
|     6200 |           6300 | SQL |
|     6200 |           6300 | SQL |
+----------+----------------+-----+


## CASE演算子 - 値を変換する


mysql> select category, withdraw, 
							case category when "居住費" then "固定費"
    -> WHEN "水道光熱費" THEN "固定費"
    -> ELSE "変動費"
    -> END 
    -> AS 出費の分類
    -> FROM expenses where withdraw > 0;
+-----------------+----------+-----------------+
| category        | withdraw | 出費の分類      |
+-----------------+----------+-----------------+
| 食費            |      380 | 変動費          |
| 教養娯楽費      |     2800 | 変動費          |
| 交際費          |     5000 | 変動費          |
| 水道光熱費      |     6200 | 固定費          |
| 通信費          |     6200 | 変動費          |
+-----------------+----------+-----------------+


## サブクエリ
SELECT category, withdraw 
FROM expenses 
WHERE withdraw = ( SELECT MAX(withdraw FROM expenses );


## サブクエリ UPDATE
select avg(withdraw) from archiveExpenses where withdraw > 0 and category = '食費';
別のテーブルから抽出した内容でデータを更新する

##  any
select * from expenses where category = '食費' AND withdraw < (SELECT withdraw from archiveExpenses where category = '食費');



## 表のサブクエリ
mysql> select sum(SUB.withdraw) as 出金額合計 from
    -> (select date, category, withdraw from expenses
    -> union
    -> select date, category, withdraw from archiveExpenses
    -> where date >= 2013-01-01 AND date <= '2013-01-31') as SUB;
+-----------------+
| 出金額合計        |
+-----------------+
|          199230 |
+-----------------+
